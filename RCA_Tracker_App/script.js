document.addEventListener("DOMContentLoaded", function () {
    const API_URL = "https://script.google.com/macros/s/AKfycbx2ELX5rCZl3pdHh6mMg0syJUgJVshyUtxTQdaz0TuHScdGa7oO1yQlyxLgdunKYKaLgA/exec"; // ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ API ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶¨‡¶∏‡¶æ‡¶®

    const loadingElement = document.getElementById("loading");
    const leaderboardList = document.getElementById("leaderboard-list");
    const updatesList = document.getElementById("updates-list");

    async function fetchData() {
        try {
            const response = await fetch(API_URL);
            const data = await response.json();

            loadingElement.style.display = "none"; // ‡¶≤‡ßã‡¶°‡¶ø‡¶Ç ‡¶Ö‡¶´

            if (!data || !Array.isArray(data)) {
                throw new Error("Invalid data format");
            }

            let leaderboard = {};
            let dailyUpdates = [];

            data.forEach(entry => {
                let name = entry["  üë§  ‡¶®‡¶æ‡¶Æ"] || "‡¶Ö‡¶ú‡¶æ‡¶®‡¶æ";
                let activeTime = entry["üí¨   ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá ‡¶Æ‡ßã‡¶ü ‡¶ï‡¶§‡¶ï‡ßç‡¶∑‡¶£ ‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡ßü ‡¶õ‡¶ø‡¶≤‡ßá‡¶®?  "] || "‚ùå ‡¶®‡ßá‡¶á";
                let courses = entry["üìö   ‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡ßã‡¶® ‡¶ï‡ßã‡¶® ‡¶ï‡ßã‡¶∞‡ßç‡¶∏‡ßá‡¶∞ ‡¶ú‡¶ø‡¶Æ‡ßç‡¶Æ‡¶æ‡¶¶‡¶æ‡¶∞?  "] || "‚ùå ‡¶®‡ßá‡¶á";

                // ‡¶≤‡¶ø‡¶°‡¶æ‡¶∞‡¶¨‡ßã‡¶∞‡ßç‡¶° ‡¶§‡ßà‡¶∞‡¶ø
                if (!leaderboard[name]) {
                    leaderboard[name] = { name, activeTime: 0, coursesCount: 0 };
                }

                if (activeTime.includes("‡ßß ‡¶ò‡¶£‡ßç‡¶ü‡¶æ+")) leaderboard[name].activeTime += 1;
                if (activeTime.includes("‡ß® ‡¶ò‡¶£‡ßç‡¶ü‡¶æ+")) leaderboard[name].activeTime += 2;
                if (activeTime.includes("‡ß© ‡¶ò‡¶£‡ßç‡¶ü‡¶æ+")) leaderboard[name].activeTime += 3;

                leaderboard[name].coursesCount += courses.split(",").length;

                // ‡¶¶‡ßà‡¶®‡¶ø‡¶ï ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü
                dailyUpdates.push(`${name} üïí ${activeTime} üè´ ${courses}`);
            });

            // ‡¶≤‡¶ø‡¶°‡¶æ‡¶∞‡¶¨‡ßã‡¶∞‡ßç‡¶° ‡¶∏‡¶æ‡¶ú‡¶æ‡¶®‡ßã
            let sortedLeaderboard = Object.values(leaderboard).sort((a, b) => b.activeTime - a.activeTime);

            sortedLeaderboard.forEach(user => {
                let li = document.createElement("li");
                li.textContent = `üèÖ ${user.name} - ‚è≥ ${user.activeTime} ‡¶ò‡¶®‡ßç‡¶ü‡¶æ, üìö ${user.coursesCount} ‡¶ï‡ßã‡¶∞‡ßç‡¶∏`;
                leaderboardList.appendChild(li);
            });

            // ‡¶¶‡ßà‡¶®‡¶ø‡¶ï ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã
            dailyUpdates.forEach(update => {
                let li = document.createElement("li");
                li.textContent = update;
                updatesList.appendChild(li);
            });

        } catch (error) {
            loadingElement.textContent = "‚ùå ‡¶°‡ßá‡¶ü‡¶æ ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá!";
            console.error("Error fetching data:", error);
        }
    }

    fetchData();
});
